 // Import Global Rules
 @import './sass/layout/global-rules';


 @import './sass/pages/contact';

 @import './sass/variables/colors'  ;


 @import './sass/helpers/functions'  ;

 @import './sass/helpers/mixins'  ;


 $alt_color : green;

 .header {
    color: $alt_color;
 }


 .footer {
    $alt_color : black !global;
    background-color: $alt_color ;
 }


 .copyright{
    background-color:  $alt_color;
 }

 .sidebar{
    background-color : $main;

 }

 $max_mobile : "max-width:767px";

 @media(max-width:767px)
 {
    .sidebar{
        padding: 20px;
    }
 }




 .parent {
    font-weight: bold;
    .child{
        font-size: 20px;
        .sidebar{
            color:aqua
        }
    }
 }

.parent-one , .parent-two{
    padding: 20px;
    .child{
        padding: 10px;
    }
}


.parent  >  {
.child {
    font-size: 20PX;
}
.test {
    font-size: 20PX;
}
}

.parent     {
    > .child {
        font-size: 20PX;
    }
    .test {
        font-size: 20PX;
    }

     + p {
        font-size: 15px;
     }
    }

.parent {
    > {
        .element-one {
            font-size: 10px;
        }
        .element-two {
            font-size: 20px;
        }
    }

    .not-direct-child{
        font-size: bold;
    }
}


.box {
    &.red{
        font-size: bold;
    }
    &.green{
        font-size: bold;
    }

    .title{
        font-size: bold;
    }

    .description{
        font-size: bold;
    }

    &:hover{
        background-color: aqua;
    }
    &:hover .title{
        font-weight: 200;
    }
    :not(&){
        font-weight: normal;
    }
    [dir=rtl] & {
        direction:  rtl;
    }
}


.box {
    font-size: 20px;
    font:{
        size: 15px;
        weight:bold;
    }
    margin: auto{
        top:10px;
        bottom:15px
    };
}


%main-box{
    background-color: white;
    padding: 15px;
    border: 1px solid #ccc;
}

.ads{
    @extend %main-box;
    font-size:20px
}

$theme : 'dark';

.page{
    @if $theme == 'light' {
        background-color: white;
        color:#444
    } @else {
        background-color:  #444;
        color: white;
    }
}

$rounded : false ;

.boxs{
    @extend %main-box;
    border-radius: if($rounded,6px,null);
}
$direction: 'left';

.arrow-div{
    @extend %main-box;
    font-size: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 300px;
    height: 300px;
    position: relative;
    margin:  50px auto;
    &::before{
        content: '';
        position: absolute;
        border: 20px solid transparent;
        @if $direction == "top"{
            top:-40px;
            left: 50%;
            transform: translateX(-50%);
            border-bottom-color: red;
        }@else if $direction == 'right' {
            right: -40px;
            top : 50%;
            transform: translateY(-50%);
            border-left-color: red;
        }@else if $direction == 'bottom' {
            bottom: -40px;
            left : 50%;
            transform: translateX(-50%);
            border-top-color: red;
        }@else if $direction == 'left' {
            left: -40px;
            top : 50%;
            transform: translateY(-50%);
            border-right-color: red;
        }@else{
            @error "This Direction #{$direction} Is Not Valid"
        }
    }



}
$company: "elzero";
$position : "left";
.ad-#{$company}-#{unique-id()}{
    font-size: 20px;
    background-image: url("imgs/#{$company}.png");
    #{ $position } :0
}

.ad-#{unique-id()}{
    font-weight: bold;
}


// in sass only

/* sass and css but not compressed mode*/

/*! all three */


@mixin list-reset {
    padding: 0;
    margin: 0;
    list-style: none;
}
ul.links{
    @include list-reset;
}

@mixin circle($dimensions){
    border-radius: 50%;
    width:$dimensions ;
    height:$dimensions ;
}
.circle-100{
    @include circle(100px);
    color :white
}

.circle-200{
    @include circle(200px);
    color :white
}


@mixin centering {

    display: flex;
    justify-content: center;
    align-items: center;
}

.center-circle {
    @include circle(200px);
    @include centering;

}

@for $i from 1 through 10 {
    .class-#{$i}{
        font-size: $i*10;
    }
}

$dimensions:0;

@for $i from 1 through 10 {
    .circle-#{100 +$dimensions}{
            width: $dimensions + 100px ;
    }
    $dimensions : $dimensions +100
}

$themes: red, green , blue;

@each $theme in $themes{
    .#{$theme}-theme{
        .products{
            background-color: white;
            border-bottom: 2px solid $theme;
        }
    }
}

$socials :('facebook':'blue','youtube':'red','github':'black');

@each $name , $color in $socials {
    .#{$name}{
        background-color: $color;
        &::before{
            content: $name;
        }
    }
}


$classes: 'one' 20px red,"two" 15px green , "three" 22px blue;

@each $class , $font , $color in $classes {

    .#{$class}{
        font-size: $font;
        background-color: $color;
    }

}

$start : 1;

@while $start <=10 { 
    .width-#{$start*100} { 
            width : $start*100px;
            height:($start *100px)/2
    }
    $start : $start +1;
}


$grid_cols:12;

@for $i from 1 through $grid_cols {
    .col-#{$i}{
        width: percentage($i/$grid_cols);
    }
}

$width:200px;
.element {
    width: $width;
    height: half($width);
    top:calculate(100px,200px,50px)
}

.black-overlay{
    @include overlay(black,.5)
}

@include KeyF(fade-in){
    from{
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}


.media{
    @include breakpoints(mobile){
        font-size: 15px;
    }
}